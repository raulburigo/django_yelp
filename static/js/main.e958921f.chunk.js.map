{"version":3,"sources":["apis/RestaurantFinder.js","context/RestaurantContext.js","components/AddRestaurant.jsx","components/StarRating.jsx","components/RestaurantList.jsx","pages/Home.jsx","components/AddReview.jsx","components/Reviews.jsx","pages/RestaurantDetail.jsx","components/UpdateForm.jsx","pages/RestaurantUpdate.jsx","App.jsx","index.js"],"names":["axios","defaults","xsrfCookieName","xsrfHeaderName","create","baseURL","RestaurantContext","createContext","RestaurantContextProvider","props","useState","restaurants","setRestaurants","newReviews","setNewReviews","isUpdated","setIsUpdated","useEffect","a","RestaurantFinder","get","response","data","fetchData","catch","err","console","log","Provider","value","addRestaurant","restaurant","addReview","review","children","AddRestaurant","useContext","name","setName","location","setLocation","priceRange","setPriceRange","handleSubmit","e","preventDefault","alert","post","price_range","status","non_field_errors","className","onSubmit","type","required","placeholder","onChange","target","disabled","StarRating","rating","stars","starIcons","i","push","key","RestaurantList","handleDelete","id","stopPropagation","delete","filter","scope","map","onClick","window","href","repeat","count","avg_rating","handleUpdate","Home","AddReview","setReview","setRating","restaurantId","emptyStar","fullStar","result","confirm","htmlFor","Reviews","reviews","style","maxWidth","fontWeight","RestaurantDetail","setRestaurant","UpdateForm","put","UpdateRestaurant","App","page","restaurant_id","page_view","RestaurantUpdate","rootElement","document","getElementById","ReactDOM","render","dataset"],"mappings":"sOAEAA,IAAMC,SAASC,eAAiB,YAChCF,IAAMC,SAASE,eAAiB,cAEjBH,UAAMI,OAAO,CACxBC,QAAS,4DCHAC,EAAoBC,0BAEpBC,EAA4B,SAAAC,GAAU,IAAD,EACRC,mBAAS,IADD,mBACvCC,EADuC,KAC1BC,EAD0B,OAEVF,mBAAS,IAFC,mBAEvCG,EAFuC,KAE3BC,EAF2B,OAGZJ,oBAAS,GAHG,mBAGvCK,EAHuC,KAG5BC,EAH4B,KAK9CC,qBAAU,WAAM,4CACZ,4BAAAC,EAAA,sEAC2BC,EAAiBC,IAAI,IADhD,OACUC,EADV,OAEIT,EAAeS,EAASC,KAAKA,KAAKX,aAFtC,4CADY,uBAAC,WAAD,gCAKZY,GAAYC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,MACrCT,GAAa,KACd,CAACJ,EAAgBG,IAUpB,OACI,kBAACT,EAAkBsB,SAAnB,CAA4BC,MAAO,CAC/BlB,cACAC,iBACAkB,cAZc,SAAAC,GAClBnB,EAAe,GAAD,mBAAKD,GAAL,CAAkBoB,MAY5BC,UATU,SAAAC,GACdnB,EAAc,GAAD,mBAAKD,GAAL,CAAiBoB,MAS1BpB,aACAG,eACAD,cAECN,EAAMyB,WCyCJC,MA1Ef,WAA0B,IACdL,EAAkBM,qBAAW9B,GAA7BwB,cADa,EAEGpB,mBAAS,IAFZ,mBAEd2B,EAFc,KAERC,EAFQ,OAGW5B,mBAAS,IAHpB,mBAGd6B,EAHc,KAGJC,EAHI,OAIe9B,mBAAS,eAJxB,mBAId+B,EAJc,KAIFC,EAJE,KAOfC,EAAY,uCAAG,WAAMC,GAAN,eAAA1B,EAAA,yDACjB0B,EAAEC,iBACiB,gBAAfJ,EAFa,gBAGbK,MAAM,wCAHO,gDAMc3B,EAAiB4B,KAAK,GAAI,CAC7CV,OACAE,WACAS,YAAaP,IATR,OAMHpB,EANG,OAWTS,EAAcT,EAASC,KAAKA,KAAKS,YACjCO,EAAQ,IACRE,EAAY,IACZE,EAAc,eAdL,kDAgBThB,QAAQC,IAAR,MAC4B,MAAxB,KAAIN,SAAS4B,QACiC,sDAA1C,KAAI5B,SAASC,KAAK4B,iBAAiB,IACnCJ,MAAM,iEAnBL,0DAAH,sDA0BlB,OACI,yBAAKK,UAAU,QACX,0BAAMC,SAAUT,GACZ,yBAAKQ,UAAU,YACX,yBAAKA,UAAU,OACX,2BACIA,UAAU,eACVE,KAAK,OACLC,UAAQ,EACRC,YAAY,kBACZ1B,MAAOQ,EACPmB,SAAU,SAAAZ,GAAC,OAAIN,EAAQM,EAAEa,OAAO5B,WAGxC,yBAAKsB,UAAU,OACX,2BACIA,UAAU,eACVE,KAAK,OACLC,UAAQ,EACRC,YAAY,sBACZ1B,MAAOU,EACPiB,SAAU,SAAAZ,GAAC,OAAIJ,EAAYI,EAAEa,OAAO5B,WAG5C,yBAAKsB,UAAU,OACX,4BAAQA,UAAU,gBAAgBtB,MAAOY,EAAYe,SAAU,SAAAZ,GAAC,OAAIF,EAAcE,EAAEa,OAAO5B,SACvF,4BAAQ6B,UAAQ,GAAhB,eACA,4BAAQ7B,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,MACA,4BAAQA,MAAM,KAAd,OACA,4BAAQA,MAAM,KAAd,QACA,4BAAQA,MAAM,KAAd,WAGR,4BAAQwB,KAAK,SAASF,UAAU,mBAAhC,WC7CLQ,MAxBf,YASI,IAT6B,IAAXC,EAAU,EAAVA,OAEZC,EAAQ,GACRC,EACI,2BADJA,EAEI,oCAFJA,EAGK,2BAGFC,EAAI,EAAGA,GAAK,EAAGA,IAChBA,GAAKH,EACLC,EAAMG,KAAK,uBAAGC,IAAKF,EAAGZ,UAAWW,KACzBC,EAAIH,GAAW,GACvBC,EAAMG,KAAK,uBAAGC,IAAKF,EAAGZ,UAAWW,KAEjCD,EAAMG,KAAK,uBAAGC,IAAKF,EAAGZ,UAAWW,KAIzC,OACI,kBAAC,WAAD,KAAYD,ICuCLK,MAxDf,WAA2B,IAAD,EAEgB9B,qBAAW9B,GAA1CK,EAFe,EAEfA,YAAaC,EAFE,EAEFA,eAEduD,EAAY,uCAAG,WAAOvB,EAAGwB,GAAV,SAAAlD,EAAA,6DACjB0B,EAAEyB,kBADe,kBAGPlD,EAAiBmD,OAAjB,WAA4BF,IAHrB,OAIbxD,EAAeD,EAAY4D,QAAO,SAAAxC,GAAU,OAAIA,EAAWqC,KAAOA,MAJrD,gDAMb1C,QAAQC,IAAR,MANa,yDAAH,wDAmBlB,OACI,yBAAKwB,UAAU,cACX,2BAAOA,UAAU,gCACb,+BACI,wBAAIA,UAAU,0BACV,wBAAIqB,MAAM,OAAV,cACA,wBAAIA,MAAM,OAAV,YACA,wBAAIA,MAAM,OAAV,eACA,wBAAIA,MAAM,OAAV,WACA,wBAAIA,MAAM,OAAV,QACA,wBAAIA,MAAM,OAAV,YAGR,+BACK7D,GAAeA,EAAY8D,KAAI,SAAA1C,GAAU,OAC1C,wBAAIkC,IAAKlC,EAAWqC,GAAIM,QAAS,kBAnB5BN,EAmB+CrC,EAAWqC,QAlB3EO,OAAOpC,SAASqC,KAAhB,uBAAuCR,IADtB,IAAAA,IAoBD,4BAAKrC,EAAWM,MAChB,4BAAKN,EAAWQ,UAChB,4BAAK,IAAIsC,OAAO9C,EAAWiB,cAC1BjB,EAAW+C,MAAQ,EAAI,4BACpB,kBAAC,EAAD,CAAYlB,OAAQ7B,EAAWgD,aAC/B,0BAAM5B,UAAU,gBAAhB,IAAiCpB,EAAW+C,MAA5C,MACI,4BAAI,0BAAM3B,UAAU,gBAAhB,eACZ,4BAAI,4BAAQuB,QAAS,SAAA9B,GAAC,OAhCrB,SAACA,EAAGwB,GACrBxB,EAAEyB,kBACFM,OAAOpC,SAASqC,KAAhB,uBAAuCR,EAAvC,WA8B0CY,CAAapC,EAAGb,EAAWqC,KAAKjB,UAAU,mBAAhE,WACJ,4BAAI,4BAAQuB,QAAS,SAAA9B,GAAC,OAAIuB,EAAavB,EAAGb,EAAWqC,KAAKjB,UAAU,kBAAhE,mBCpCb8B,MAZf,WACI,OACI,6BACI,6BACI,wBAAI9B,UAAU,2CAAd,sBAEJ,kBAAC,EAAD,MACA,kBAAC,EAAD,QC4DG+B,MAnEf,SAAmBzE,GAAQ,IAAD,EAEMC,mBAAS,IAFf,mBAEfuB,EAFe,KAEPkD,EAFO,OAGMzE,mBAAS,GAHf,mBAGfkD,EAHe,KAGPwB,EAHO,KAIhBC,EAAe5E,EAAM2D,GAEnBpC,EAAcI,qBAAW9B,GAAzB0B,UAEFsD,EAAY,uBAAGnC,UAAU,gBACzBoC,EAAW,uBAAGpC,UAAU,gBAExBR,EAAY,uCAAG,WAAMC,GAAN,eAAA1B,EAAA,yDACjB0B,EAAEC,iBACa,IAAXe,EAFa,gBAGbd,MAAM,mCAHO,gDAMY3B,EAAiB4B,KAAjB,UACdsC,EADc,eAEjB,CAAEpD,SAAQ2B,WARL,OAMH4B,EANG,OAUTxD,EAAUwD,GAVD,kDAYT9D,QAAQC,IAAR,MAC4B,MAAxB,KAAIN,SAAS4B,QAC4C,IAArD0B,OAAOc,QAAQ,oCACfd,OAAOpC,SAASqC,KAAO,mBAEI,MAAxB,KAAIvD,SAAS4B,QAC0B,wDAA1C,KAAI5B,SAASC,KAAK4B,iBAAiB,IACvCJ,MAAM,uCAnBD,QAwBbqC,EAAU,IACVC,EAAU,GAzBG,0DAAH,sDA6BlB,OACI,yBAAKjC,UAAU,QACX,0BAAMC,SAAUT,GACZ,wBAAIQ,UAAU,iBAAd,cACA,yBAAKA,UAAU,YACX,yBAAKA,UAAU,uBACX,2BAAOuC,QAAQ,UAAf,UACA,6BACI,0BAAMhB,QAAS,kBAAMU,EAAU,IAAIvD,MAAO,GAAI+B,GAAU,EAAI0B,EAAYC,GACxE,0BAAMb,QAAS,kBAAMU,EAAU,IAAIvD,MAAO,GAAI+B,GAAU,EAAI0B,EAAYC,GACxE,0BAAMb,QAAS,kBAAMU,EAAU,IAAIvD,MAAO,GAAI+B,GAAU,EAAI0B,EAAYC,GACxE,0BAAMb,QAAS,kBAAMU,EAAU,IAAIvD,MAAO,GAAI+B,GAAU,EAAI0B,EAAYC,GACxE,0BAAMb,QAAS,kBAAMU,EAAU,IAAIvD,MAAO,GAAI+B,GAAU,EAAI0B,EAAYC,MAIpF,yBAAKpC,UAAU,cACX,2BAAOuC,QAAQ,UAAf,UACA,8BAAUpC,UAAQ,EAACc,GAAG,SAASvC,MAAOI,EAAQuB,SAAU,SAAAZ,GAAC,OAAIuC,EAAUvC,EAAEa,OAAO5B,QAAQsB,UAAU,kBAEtG,4BAAQE,KAAK,SAASF,UAAU,6BAAhC,iBC3CDwC,MAlBf,YAA+B,IAAZC,EAAW,EAAXA,QACf,OACI,yBAAKzC,UAAU,uBACVyC,GAAWA,EAAQnB,KAAI,SAAAxC,GAAM,OAC9B,yBAAKgC,IAAKhC,EAAOmC,GAAIjB,UAAU,uCAAuC0C,MAAO,CAACC,SAAU,QACpF,yBAAK3C,UAAU,8CACf,0BAAM0C,MAAO,CAACE,WAAY,QAAS9D,EAAOI,MACtC,8BAAM,kBAAC,EAAD,CAAYuB,OAAQ3B,EAAO2B,WAErC,yBAAKT,UAAU,aACX,uBAAGA,UAAU,aAAalB,EAAOA,eCuCtC+D,MA7Cf,SAA0BvF,GAAQ,IACtB2D,EAAO3D,EAAP2D,GADqB,EAEO1D,mBAAS,IAFhB,mBAEtBqB,EAFsB,KAEVkE,EAFU,KAGrBpF,EAAeuB,qBAAW9B,GAA1BO,WAsBR,OApBAI,qBAAU,WAAM,4CACZ,4BAAAC,EAAA,sEAC2BC,EAAiBC,IAAjB,UAAwBgD,IADnD,OACU/C,EADV,OAEI4E,EAAc5E,EAASC,KAAKA,KAAKS,YAFrC,4CADY,uBAAC,WAAD,gCAKZR,GAAYC,OAAM,SAAAC,GACdC,QAAQC,IAAIF,GACgB,MAAxBA,EAAIJ,SAAS4B,QACbgD,EAAc,CACV5D,KAAM,WACNE,SAAU,iBAIvB,CAAC6B,EAAIvD,IAOJ,kBAAC,WAAD,KACMkB,IAAmC,aAApBA,EAAWM,MAA+C,YAAxBN,EAAWQ,SAC9D,wBAAIY,UAAU,gCAAd,8BAEA,oCACA,yBAAKA,UAAU,oBACX,wBAAIA,UAAU,+BAA+BpB,EAAWM,MACvDN,EAAW+C,MAAQ,EAAI,oCAAE,kBAAC,EAAD,CAAYlB,OAAQ7B,EAAWgD,aACzD,0CAAYhD,EAAW+C,MAAvB,UAAgD,mDAChD,4BAAQzB,KAAK,SAASqB,QAdV,WACpBC,OAAOpC,SAASqC,KAAhB,uBAAuC7C,EAAWqC,GAAlD,YAawDjB,UAAU,+BAA1D,sBAEJ,kBAAC,EAAD,CAASyC,QAAS7D,EAAW6D,UAC7B,kBAAC,EAAD,CAAWxB,GAAIA,QC4CZ8B,MArFf,SAAoBzF,GAAQ,IAChB2D,EAAO3D,EAAP2D,GADe,EAEC1D,mBAAS,IAFV,mBAEhB2B,EAFgB,KAEVC,EAFU,OAGS5B,mBAAS,IAHlB,mBAGhB6B,EAHgB,KAGNC,EAHM,OAIa9B,mBAAS,eAJtB,mBAIhB+B,EAJgB,KAIJC,EAJI,OAKahC,mBAAS,MALtB,mBAKhBqB,EALgB,KAKJkE,EALI,KAOfjF,EAAiBoB,qBAAW9B,GAA5BU,aAERC,qBAAU,WAAM,4CACZ,4BAAAC,EAAA,sEAC2BC,EAAiBC,IAAjB,UAAwBgD,IADnD,OACU/C,EADV,OAEIiB,EAAQjB,EAASC,KAAKA,KAAKS,WAAWM,MACtCG,EAAYnB,EAASC,KAAKA,KAAKS,WAAWQ,UAC1CG,EAAcrB,EAASC,KAAKA,KAAKS,WAAWiB,aAJhD,4CADY,uBAAC,WAAD,gCAOZzB,GAAYC,OAAM,SAAAC,GACdC,QAAQC,IAAIF,GACgB,MAAxBA,EAAIJ,SAAS4B,QACbgD,EAAc,UAGvB,CAAC7B,IAEJ,IAAMzB,EAAY,uCAAG,WAAMC,GAAN,SAAA1B,EAAA,6DACjB0B,EAAEC,iBADe,kBAGP1B,EAAiBgF,IAAjB,UAAwB/B,EAAxB,KAA+B,CACjC/B,OACAE,WACAS,YAAaP,IANJ,OAQbzB,GAAa,GACb2D,OAAOpC,SAASqC,KAAQ,IATX,gDAWblD,QAAQC,IAAR,MAXa,yDAAH,sDAelB,OACI,6BACqB,MAAfI,EACF,0BAAMqB,SAAUT,GACZ,yBAAKQ,UAAU,cACX,2BAAOuC,QAAQ,QAAf,QACA,2BACIvC,UAAU,eACVE,KAAK,OACLC,UAAQ,EACRC,YAAY,kBACZ1B,MAAOQ,EACPmB,SAAU,SAAAZ,GAAC,OAAIN,EAAQM,EAAEa,OAAO5B,WAGxC,yBAAKsB,UAAU,cACX,2BAAOuC,QAAQ,YAAf,YACA,2BACIvC,UAAU,eACVE,KAAK,OACLC,UAAQ,EACRC,YAAY,sBACZ1B,MAAOU,EACPiB,SAAU,SAAAZ,GAAC,OAAIJ,EAAYI,EAAEa,OAAO5B,WAG5C,yBAAKsB,UAAU,cACX,2BAAOuC,QAAQ,eAAf,eACA,4BAAQvC,UAAU,gBAAgBtB,MAAOY,EAAYe,SAAU,SAAAZ,GAAC,OAAIF,EAAcE,EAAEa,OAAO5B,SACvF,4BAAQ6B,UAAQ,GAAhB,eACA,4BAAQ7B,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,MACA,4BAAQA,MAAM,KAAd,OACA,4BAAQA,MAAM,KAAd,QACA,4BAAQA,MAAM,KAAd,WAGR,4BAAQwB,KAAK,SAASF,UAAU,mBAAhC,WAGJ,wBAAIA,UAAU,2BAAd,gCCtEGiD,MAVf,SAA0B3F,GAEtB,OACI,6BACI,wBAAI0C,UAAU,eAAd,qBACA,kBAAC,EAAD,CAAYiB,GAAI3D,EAAM2D,OC0BnBiC,EA5BH,SAAC5F,GAAW,IAAD,EACWA,EAAMa,KAA9BgF,EADa,EACbA,KAAMC,EADO,EACPA,cAEVC,EAAY,KAEhB,OAAQF,GACN,IAAK,OACHE,EAAY,kBAAC,EAAD,MACZ,MACF,IAAK,SACHA,EAAY,kBAAC,EAAD,CAAkBpC,GAAImC,IAClC,MACF,IAAK,SACHC,EAAY,kBAACC,EAAD,CAAkBrC,GAAImC,IAMtC,OACE,kBAAC,EAAD,KACE,yBAAKpD,UAAU,aACZqD,KCxBHE,EAAcC,SAASC,eAAe,QAE5CC,IAASC,OAAO,kBAAC,EAAD,CAAKxF,KAAMoF,EAAYK,UAAaL,K","file":"static/js/main.e958921f.chunk.js","sourcesContent":["import axios from 'axios';\n\naxios.defaults.xsrfCookieName = 'csrftoken'\naxios.defaults.xsrfHeaderName = \"X-CSRFTOKEN\"\n\nexport default axios.create({\n    baseURL: 'https://yelp-like-app.herokuapp.com/api/v1/restaurants/'\n});\n","import React, { useState, createContext, useEffect } from 'react';\nimport RestaurantFinder from '../apis/RestaurantFinder';\n\nexport const RestaurantContext = createContext();\n\nexport const RestaurantContextProvider = props => {\n    const [restaurants, setRestaurants] = useState([])\n    const [newReviews, setNewReviews] = useState([])\n    const [isUpdated, setIsUpdated] = useState(true) \n\n    useEffect(() => {\n        async function fetchData() {\n            const response = await RestaurantFinder.get('')\n            setRestaurants(response.data.data.restaurants)\n        }\n        fetchData().catch(err => console.log(err));\n        setIsUpdated(true)\n    }, [setRestaurants, isUpdated])\n\n    const addRestaurant = restaurant => {\n        setRestaurants([...restaurants, restaurant])\n    }\n\n    const addReview = review => {\n        setNewReviews([...newReviews, review])\n    }\n\n    return (\n        <RestaurantContext.Provider value={{\n            restaurants,\n            setRestaurants,\n            addRestaurant,\n            addReview,\n            newReviews,\n            setIsUpdated,\n            isUpdated\n        }}>\n            {props.children}\n        </RestaurantContext.Provider>\n    )\n}\n","import React, { useContext, useState } from 'react'\nimport RestaurantFinder from '../apis/RestaurantFinder'\nimport { RestaurantContext } from '../context/RestaurantContext'\n\nfunction AddRestaurant() {\n    const { addRestaurant } = useContext(RestaurantContext)\n    const [name, setName] = useState('')\n    const [location, setLocation] = useState('')\n    const [priceRange, setPriceRange] = useState('Price Range')\n\n    // nao gosto disso pq ele tá permitindo submeter o form com price_range errado\n    const handleSubmit = async e => {\n        e.preventDefault()\n        if (priceRange === 'Price Range') {\n            alert(\"You forgot to select the price range\")\n        } else {\n            try {\n                const response = await RestaurantFinder.post('', {\n                    name,\n                    location,\n                    price_range: priceRange\n                })\n                addRestaurant(response.data.data.restaurant)\n                setName('')\n                setLocation('')\n                setPriceRange('Price Range')\n            } catch (err) {\n                console.log(err)\n                if (err.response.status === 400) {\n                    if (err.response.data.non_field_errors[0] === \"The fields name, location must make a unique set.\") {\n                        alert(\"There already is a restaurant with this name in this location\")\n                    }\n                }\n            }\n        }\n    }\n\n    return (\n        <div className=\"mb-4\">\n            <form onSubmit={handleSubmit}>\n                <div className=\"form-row\">\n                    <div className=\"col\">\n                        <input\n                            className=\"form-control\"\n                            type=\"text\"\n                            required\n                            placeholder=\"restaurant name\"\n                            value={name}\n                            onChange={e => setName(e.target.value)}\n                        />\n                    </div>\n                    <div className=\"col\">\n                        <input\n                            className=\"form-control\"\n                            type=\"text\"\n                            required\n                            placeholder=\"restaurant location\"\n                            value={location}\n                            onChange={e => setLocation(e.target.value)}                            \n                        />\n                    </div>\n                    <div className=\"col\">\n                        <select className=\"custom-select\" value={priceRange} onChange={e => setPriceRange(e.target.value)}>\n                            <option disabled>Price Range</option>\n                            <option value=\"1\">$</option>\n                            <option value=\"2\">$$</option>\n                            <option value=\"3\">$$$</option>\n                            <option value=\"4\">$$$$</option>\n                            <option value=\"5\">$$$$$</option>\n                        </select>\n                    </div>\n                    <button type=\"submit\" className=\"btn btn-primary\">Add</button>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nexport default AddRestaurant\n","import React, { Fragment } from 'react';\n\nfunction StarRating({ rating }) {\n    \n    const stars = []\n    const starIcons = {\n        full: \"fas fa-star text-warning\",\n        half: \"fas fa-star-half-alt text-warning\",\n        empty: \"far fa-star text-warning\"\n    }\n\n    for (let i = 1; i <= 5; i++) {\n        if (i <= rating) {\n            stars.push(<i key={i} className={starIcons.full}></i>);\n        } else if ((i - rating) <= 0.5 ) {\n            stars.push(<i key={i} className={starIcons.half}></i>);\n        } else {\n            stars.push(<i key={i} className={starIcons.empty}></i>);\n        }\n    }\n\n    return (\n        <Fragment>{ stars }</Fragment>\n    )\n}\n\nexport default StarRating;\n","import React, { useContext } from 'react';\nimport RestaurantFinder from '../apis/RestaurantFinder';\nimport { RestaurantContext } from '../context/RestaurantContext';\nimport StarRating from './StarRating';\n\nfunction RestaurantList() {\n\n    const {restaurants, setRestaurants} = useContext(RestaurantContext);\n\n    const handleDelete = async (e, id) => {\n        e.stopPropagation();\n        try {\n            await RestaurantFinder.delete(`/${id}`)\n            setRestaurants(restaurants.filter(restaurant => restaurant.id !== id))\n        } catch (err) {\n            console.log(err)\n        }\n    }\n\n    const handleUpdate = (e, id) => {\n        e.stopPropagation()\n        window.location.href = `/restaurants/${id}/update`\n    }\n\n    const handleDetail = id => {\n        window.location.href = `/restaurants/${id}`\n    }\n\n    return (\n        <div className=\"list-group\">\n            <table className=\"table table-hover table-dark\">\n                <thead>\n                    <tr className=\"bg-primary text-center\">\n                        <th scope=\"col\">Restaurant</th>\n                        <th scope=\"col\">Location</th>\n                        <th scope=\"col\">Price Range</th>\n                        <th scope=\"col\">Ratings</th>\n                        <th scope=\"col\">Edit</th>\n                        <th scope=\"col\">Delete</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {restaurants && restaurants.map(restaurant => (\n                    <tr key={restaurant.id} onClick={() => handleDetail(restaurant.id)}>\n                        <td>{restaurant.name}</td>\n                        <td>{restaurant.location}</td>\n                        <td>{'$'.repeat(restaurant.price_range)}</td>\n                        {restaurant.count > 0 ? <td>\n                            <StarRating rating={restaurant.avg_rating}/>\n                            <span className=\"text-warning\">({restaurant.count})</span>\n                        </td> : <td><span className=\"text-warning\">no reviews</span></td>}\n                        <td><button onClick={e => handleUpdate(e, restaurant.id)} className=\"btn btn-warning\">Update</button></td>\n                        <td><button onClick={e => handleDelete(e, restaurant.id)} className=\"btn btn-danger\">Delete</button></td>\n                    </tr>\n                    ))}                              \n                </tbody>\n            </table>\n        </div>\n    )\n}\n\nexport default RestaurantList\n","import React from 'react'\nimport AddRestaurant from '../components/AddRestaurant'\nimport RestaurantList from '../components/RestaurantList'\n\nfunction Home() {\n    return (\n        <div>\n            <div>\n                <h1 className=\"font-weight-light display-1 text-center\">Restaurant Finder</h1>\n            </div>\n            <AddRestaurant />\n            <RestaurantList />\n        </div>\n    )\n}\n\nexport default Home\n","import React, { useContext, useState } from 'react';\nimport RestaurantFinder from '../apis/RestaurantFinder';\nimport { RestaurantContext } from '../context/RestaurantContext';\n\nfunction AddReview(props) {\n    \n    const [review, setReview] = useState('')\n    const [rating, setRating] = useState(0)\n    const restaurantId = props.id;\n    \n    const { addReview } = useContext(RestaurantContext)\n\n    const emptyStar = <i className=\"fas fa-star\"></i>\n    const fullStar = <i className=\"far fa-star\"></i>\n\n    const handleSubmit = async e => {\n        e.preventDefault()\n        if (rating === 0) {\n            alert('You must give at least one star')\n        } else {\n            try {\n                const result = await RestaurantFinder.post(\n                    `${restaurantId}/addreview/`,\n                    { review, rating }\n                )\n                addReview(result)\n            } catch (err) {\n                console.log(err);\n                if (err.response.status === 403) {\n                    if (window.confirm('You must log in to add reviews') === true) {\n                        window.location.href = '/accounts/login'\n                    }\n                } else if (err.response.status === 400) {\n                    if (err.response.data.non_field_errors[0] === \"The fields user, restaurant must make a unique set.\") {\n                    alert(\"You already reviewd this restaurant\")\n                    // todo: update review\n                    }\n                }\n            }\n            setReview('')\n            setRating(0)\n        }\n    }\n\n    return (\n        <div className=\"mb-2\">\n            <form onSubmit={handleSubmit}>\n                <h2 className=\"border-bottom\">New review</h2>\n                <div className=\"form-row\">\n                    <div className=\"form-group col-md-3\">\n                        <label htmlFor=\"rating\">Rating</label>\n                        <div>\n                            <span onClick={() => setRating(1)} value={1}>{rating >= 1 ? emptyStar : fullStar}</span>\n                            <span onClick={() => setRating(2)} value={2}>{rating >= 2 ? emptyStar : fullStar}</span>\n                            <span onClick={() => setRating(3)} value={3}>{rating >= 3 ? emptyStar : fullStar}</span>\n                            <span onClick={() => setRating(4)} value={4}>{rating >= 4 ? emptyStar : fullStar}</span>\n                            <span onClick={() => setRating(5)} value={5}>{rating >= 5 ? emptyStar : fullStar}</span>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"review\">Review</label>\n                    <textarea required id=\"review\" value={review} onChange={e => setReview(e.target.value)} className=\"form-control\"></textarea>\n                </div>\n                <button type=\"submit\" className=\"btn btn-primary btn-small\">Add Review</button>\n            </form>\n        </div>\n    )\n}\n\n\nexport default AddReview\n","import React from 'react'\nimport StarRating from './StarRating'\n\nfunction Reviews({ reviews }) {\n    return (\n        <div className=\"row row-cols-3 mb-2\">\n            {reviews && reviews.map(review => (\n            <div key={review.id} className=\"card text-white bg-primary mb-3 mr-4\" style={{maxWidth: '30%'}}>\n                <div className=\"card-header d-flex justify-content-between\">\n                <span style={{fontWeight: '600'}}>{review.name}</span>\n                    <span><StarRating rating={review.rating}/></span>\n                </div>\n                <div className=\"card-body\">\n                    <p className=\"card-text\">{review.review}</p>    \n                </div>\n            </div>\n            ))}\n        </div>\n    )\n}\n\nexport default Reviews\n","import React, { Fragment, useContext, useEffect, useState } from 'react'\nimport RestaurantFinder from '../apis/RestaurantFinder';\nimport AddReview from '../components/AddReview';\nimport Reviews from '../components/Reviews';\nimport StarRating from '../components/StarRating';\nimport { RestaurantContext } from '../context/RestaurantContext';\n\nfunction RestaurantDetail(props) {\n    const { id } = props\n    const [restaurant, setRestaurant] = useState({});\n    const { newReviews } = useContext(RestaurantContext);\n\n    useEffect(() => {\n        async function fetchData() {\n            const response = await RestaurantFinder.get(`${id}`);\n            setRestaurant(response.data.data.restaurant);\n        }\n        fetchData().catch(err => {\n            console.log(err);\n            if (err.response.status === 404) {\n                setRestaurant({\n                    name: 'notfound',\n                    location: 'nowhere',\n                })\n            }\n        });\n    }, [id, newReviews])\n\n    const handleUpdateBtn = () => {\n        window.location.href = `/restaurants/${restaurant.id}/update`\n    }\n\n    return (\n        <Fragment>\n            { restaurant && (restaurant.name === 'notfound' && restaurant.location === 'nowhere' ?\n            <h3 className=\"text-center text-danger mt-4\">404 - restaurant not found</h3>\n            :\n            <>\n            <div className=\"my-3 text-center\">\n                <h1 className=\"font-weight-light display-3\">{restaurant.name }</h1>\n                {restaurant.count > 0 ? <><StarRating rating={restaurant.avg_rating}/>\n                <span>{` (${restaurant.count}) | `}</span></> : <span>no reviews yet | </span>}\n                <button type=\"button\" onClick={handleUpdateBtn} className=\"btn btn-sm btn-outline-dark\">update restaurant</button>\n            </div>\n            <Reviews reviews={restaurant.reviews}/>\n            <AddReview id={id}/>\n            </>\n            )}\n        </Fragment>\n    )\n}\n\nexport default RestaurantDetail;\n","import React, { useState, useEffect, useContext } from 'react';\nimport RestaurantFinder from '../apis/RestaurantFinder';\nimport { RestaurantContext } from '../context/RestaurantContext';\n\nfunction UpdateForm(props) {\n    const { id } = props\n    const [name, setName] = useState('');\n    const [location, setLocation] = useState('');\n    const [priceRange, setPriceRange] = useState('Price Range');\n    const [restaurant, setRestaurant] = useState(null);\n\n    const { setIsUpdated } = useContext(RestaurantContext);\n\n    useEffect(() => {\n        async function fetchData() {\n            const response = await RestaurantFinder.get(`${id}`);\n            setName(response.data.data.restaurant.name);\n            setLocation(response.data.data.restaurant.location);\n            setPriceRange(response.data.data.restaurant.price_range);\n        }\n        fetchData().catch(err => {\n            console.log(err);\n            if (err.response.status === 404) {\n                setRestaurant(404)\n            }\n        });\n    }, [id])\n\n    const handleSubmit = async e => {\n        e.preventDefault()\n        try {\n            await RestaurantFinder.put(`${id}/`, {\n                name,\n                location,\n                price_range: priceRange\n            })\n            setIsUpdated(false)\n            window.location.href = ('/')\n        } catch (err) {\n            console.log(err)\n        }\n    }\n\n    return (\n        <div>\n            { restaurant !== 404 ? (\n            <form onSubmit={handleSubmit}>\n                <div className=\"form-group\">\n                    <label htmlFor=\"name\">Name</label>\n                    <input\n                        className=\"form-control\"\n                        type=\"text\"\n                        required\n                        placeholder=\"restaurant name\"\n                        value={name}\n                        onChange={e => setName(e.target.value)}\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"location\">Location</label>\n                    <input\n                        className=\"form-control\"\n                        type=\"text\"\n                        required\n                        placeholder=\"restaurant location\"\n                        value={location}\n                        onChange={e => setLocation(e.target.value)}                            \n                    />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"price_range\">Price Range</label>\n                    <select className=\"custom-select\" value={priceRange} onChange={e => setPriceRange(e.target.value)}>\n                        <option disabled>Price Range</option>\n                        <option value=\"1\">$</option>\n                        <option value=\"2\">$$</option>\n                        <option value=\"3\">$$$</option>\n                        <option value=\"4\">$$$$</option>\n                        <option value=\"5\">$$$$$</option>\n                    </select>\n                </div>\n                <button type=\"submit\" className=\"btn btn-primary\">Update</button>\n            </form>)\n            :\n            <h3 className=\"text-center text-danger\">404 - restaurant not found</h3>\n            }\n        </div>\n    )\n}\n\nexport default UpdateForm;\n","import React from 'react'\nimport UpdateForm from '../components/UpdateForm'\n\nfunction UpdateRestaurant(props) {\n\n    return (\n        <div>\n            <h1 className=\"text-center\">Update Restaurant</h1>\n            <UpdateForm id={props.id}/>\n        </div>\n    )\n}\n\nexport default UpdateRestaurant\n","import React from 'react';\nimport { RestaurantContextProvider } from './context/RestaurantContext';\nimport Home from './pages/Home';\nimport RestaurantDetail from './pages/RestaurantDetail';\nimport RestaurantUpdate from './pages/RestaurantUpdate';\n\nconst App = (props) => {\n  const { page, restaurant_id } = props.data\n\n  let page_view = null\n\n  switch (page) {\n    case 'home':\n      page_view = <Home />\n      break\n    case 'detail':\n      page_view = <RestaurantDetail id={restaurant_id} />\n      break\n    case 'update':\n      page_view = <RestaurantUpdate id={restaurant_id} />\n      break\n    default:\n      break\n    }\n\n  return (\n    <RestaurantContextProvider>\n      <div className=\"container\">\n        {page_view}\n      </div>\n    </RestaurantContextProvider>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nconst rootElement = document.getElementById('root')\n\nReactDOM.render(<App data={rootElement.dataset} />, rootElement);"],"sourceRoot":""}